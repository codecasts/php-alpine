{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Currently Supporting PHP 8.0 , also, PHP 7.4 and PHP 7.3. This project provides a simple alternative for running updated PHP binaries on Alpine Linux. We pack and release PHP versions as soon they are available on http://php.net. (At least, we try to.) Additionally, many PECL extensions are also available as packages as well. Created by: Diego Hernandes - @hernandev Support, Help and Faith: Ueli Banholzer - @xarem whatwedo GmbH - @whatwedo individual contributors Main Related Projects: Ambientum by @hernandev Docker native solution for running Laravel projects. From Development to Production. DDE by @whatwedo Local development environment toolset based on Docker APK Repositories & Release Cycle PHP 8.0 Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.12/php-8.0 dl.bintray.com/php-alpine/v3.11/php-8.0 PHP 7.4 Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.12/php-7.4 dl.bintray.com/php-alpine/v3.11/php-7.4 dl.bintray.com/php-alpine/v3.10/php-7.4 PHP 7.3 Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.11/php-7.3 dl.bintray.com/php-alpine/v3.10/php-7.3 Builds are available as soon as possible, and EOS is determined by: - If either PHP or Alpine release reaches end of support, the repository will stop receiving updates. - Support for both PHP and Alpine are estimated for around 2 years from release date. Active support reference: PHP: https://www.php.net/supported-versions.php Alpine: https://wiki.alpinelinux.org/wiki/Alpine_Linux:Releases Replace examples below with desired Alpine and PHP versions. Snippets The following code snippets are intended for quick usage on either shell scripts or Dockerfile Notice that main and community official repositories must be enabled. Dockerfile You may skip the ca-certificates part if you replace HTTPS by HTTP but you should not. PHP packages will eventually install ca-certificates anyway. FROM alpine:3.11 ADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub RUN apk --update-cache add ca-certificates && \\ echo \"https://dl.bintray.com/php-alpine/v3.11/php-7.4\" >> /etc/apk/repositories # install php and some extensions RUN apk add --update-cache \\ php \\ php-bz2 \\ php-json \\ php-mysql \\ php-any-other-available-package... Available Packages This is the complete available packages list: Package Name Type php PHP Core php-common PHP Core php-fpm PHP Core php-cgi PHP Core php-apache2 PHP Core php-doc PHP Core php-dev PHP Core - php-sodium Core Extension php-bcmath Core Extension php-bz2 Core Extension php-calendar Core Extension php-ctype Core Extension php-curl Core Extension php-dba Core Extension php-dom Core Extension php-embed Core Extension php-enchant Core Extension php-exif Core Extension php-ftp Core Extension php-gd Core Extension php-gettext Core Extension php-gmp Core Extension php-iconv Core Extension php-imap Core Extension php-intl Core Extension php-json Core Extension php-ldap Core Extension php-litespeed Core Extension php-mbstring Core Extension php-mcrypt Core Extension php-mysqli Core Extension php-mysqlnd Core Extension php-odbc Core Extension php-opcache Core Extension php-openssl Core Extension php-pcntl Core Extension php-pdo Core Extension php-pdo_dblib Core Extension php-pdo_mysql Core Extension php-pdo_pgsql Core Extension php-pdo_sqlite Core Extension php-pear Core Extension php-pgsql Core Extension php-phar Core Extension php-phpdbg Core Extension php-posix Core Extension php-pspell Core Extension php-session Core Extension php-shmop Core Extension php-snmp Core Extension php-soap Core Extension php-sockets Core Extension php-sqlite3 Core Extension php-sysvmsg Core Extension php-sysvsem Core Extension php-tidy Core Extension php-wddx Core Extension php-xml Core Extension php-xmlreader Core Extension php-xmlrpc Core Extension php-xsl Core Extension php-zip Core Extension php-zlib Core Extension - php-amqp Extra Extension php-apcu Extra Extension php-ast Extra Extension php-ds Extra Extension php-imagick Extra Extension php-mailparse Extra Extension php-memcached Extra Extension php-mongodb Extra Extension php-msgpack Extra Extension php-psr Extra Extension php-phalcon Extra Extension php-redis Extra Extension php-ssh2 Extra Extension php-swoole Extra Extension php-timecop Extra Extension php-libsodium Extra Extension php-scalar_objects Extra Extension php-secp256k1 Extra Extension php-xdebug Extra Extension - argon2 Extra Package argon2-dev Extra Package enchant Extra Package enchant-doc Extra Package enchant-dev Extra Package libargon2 Extra Package libsecp256k1 Extra Package Life's good!","title":"PHP-Alpine Docs."},{"location":"#created-by","text":"Diego Hernandes - @hernandev","title":"Created by:"},{"location":"#support-help-and-faith","text":"Ueli Banholzer - @xarem whatwedo GmbH - @whatwedo individual contributors","title":"Support, Help and Faith:"},{"location":"#main-related-projects","text":"Ambientum by @hernandev Docker native solution for running Laravel projects. From Development to Production. DDE by @whatwedo Local development environment toolset based on Docker","title":"Main Related Projects:"},{"location":"#apk-repositories-release-cycle","text":"","title":"APK Repositories &amp; Release Cycle"},{"location":"#php-80","text":"Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.12/php-8.0 dl.bintray.com/php-alpine/v3.11/php-8.0","title":"PHP 8.0"},{"location":"#php-74","text":"Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.12/php-7.4 dl.bintray.com/php-alpine/v3.11/php-7.4 dl.bintray.com/php-alpine/v3.10/php-7.4","title":"PHP 7.4"},{"location":"#php-73","text":"Alpine PHP End of Support Repository URL dl.bintray.com/php-alpine/v3.11/php-7.3 dl.bintray.com/php-alpine/v3.10/php-7.3 Builds are available as soon as possible, and EOS is determined by: - If either PHP or Alpine release reaches end of support, the repository will stop receiving updates. - Support for both PHP and Alpine are estimated for around 2 years from release date. Active support reference: PHP: https://www.php.net/supported-versions.php Alpine: https://wiki.alpinelinux.org/wiki/Alpine_Linux:Releases Replace examples below with desired Alpine and PHP versions.","title":"PHP 7.3"},{"location":"#snippets","text":"The following code snippets are intended for quick usage on either shell scripts or Dockerfile Notice that main and community official repositories must be enabled.","title":"Snippets"},{"location":"#dockerfile","text":"You may skip the ca-certificates part if you replace HTTPS by HTTP but you should not. PHP packages will eventually install ca-certificates anyway. FROM alpine:3.11 ADD https://dl.bintray.com/php-alpine/key/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub RUN apk --update-cache add ca-certificates && \\ echo \"https://dl.bintray.com/php-alpine/v3.11/php-7.4\" >> /etc/apk/repositories # install php and some extensions RUN apk add --update-cache \\ php \\ php-bz2 \\ php-json \\ php-mysql \\ php-any-other-available-package...","title":"Dockerfile"},{"location":"#available-packages","text":"This is the complete available packages list: Package Name Type php PHP Core php-common PHP Core php-fpm PHP Core php-cgi PHP Core php-apache2 PHP Core php-doc PHP Core php-dev PHP Core - php-sodium Core Extension php-bcmath Core Extension php-bz2 Core Extension php-calendar Core Extension php-ctype Core Extension php-curl Core Extension php-dba Core Extension php-dom Core Extension php-embed Core Extension php-enchant Core Extension php-exif Core Extension php-ftp Core Extension php-gd Core Extension php-gettext Core Extension php-gmp Core Extension php-iconv Core Extension php-imap Core Extension php-intl Core Extension php-json Core Extension php-ldap Core Extension php-litespeed Core Extension php-mbstring Core Extension php-mcrypt Core Extension php-mysqli Core Extension php-mysqlnd Core Extension php-odbc Core Extension php-opcache Core Extension php-openssl Core Extension php-pcntl Core Extension php-pdo Core Extension php-pdo_dblib Core Extension php-pdo_mysql Core Extension php-pdo_pgsql Core Extension php-pdo_sqlite Core Extension php-pear Core Extension php-pgsql Core Extension php-phar Core Extension php-phpdbg Core Extension php-posix Core Extension php-pspell Core Extension php-session Core Extension php-shmop Core Extension php-snmp Core Extension php-soap Core Extension php-sockets Core Extension php-sqlite3 Core Extension php-sysvmsg Core Extension php-sysvsem Core Extension php-tidy Core Extension php-wddx Core Extension php-xml Core Extension php-xmlreader Core Extension php-xmlrpc Core Extension php-xsl Core Extension php-zip Core Extension php-zlib Core Extension - php-amqp Extra Extension php-apcu Extra Extension php-ast Extra Extension php-ds Extra Extension php-imagick Extra Extension php-mailparse Extra Extension php-memcached Extra Extension php-mongodb Extra Extension php-msgpack Extra Extension php-psr Extra Extension php-phalcon Extra Extension php-redis Extra Extension php-ssh2 Extra Extension php-swoole Extra Extension php-timecop Extra Extension php-libsodium Extra Extension php-scalar_objects Extra Extension php-secp256k1 Extra Extension php-xdebug Extra Extension - argon2 Extra Package argon2-dev Extra Package enchant Extra Package enchant-doc Extra Package enchant-dev Extra Package libargon2 Extra Package libsecp256k1 Extra Package Life's good!","title":"Available Packages"},{"location":"building-and-or-contributing/","text":"Required Tools. You must have present on the host system: docker-compose make (GNU make) Docker (latest preferable) TL;DR You can browse Makefile scripts to have a general idea of the build process, if you don't want to read this full guide. Although is very recommended. Security. For obvious reasons, the Alpine packaging private key, used to sign packages on this repository is a secret key known only by the maintainer. If you intend to build your packages based on this scripts, will will need to generate a new key pair and the public key from that keypair should be added to alpine. This section where the public key is added, should be replaced by your own public key path (local paths also works). # USE YOUR OWN PUBLIC KEY ON THIS STEP, OTHERWISE ALPINE WILL NOT TRUST THE PACKAGES YOU BUILT. ADD https://php.codecasts.rocks/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub Please refer to this documentation in order to generate a signing key pair: https://wiki.alpinelinux.org/wiki/Creating_an_Alpine_package#Setup_your_system_and_account Env file. After generating the signing key, the next step is to configure the environment file. Copy the example env file to .env, adjusting the sensitive values. The .env should look like this: ALPINE_VERSION=3.7 PHP_VERSION=7.2 APK_PACKAGER=\"Diego Hernandes <iamhernandev@gmail.com>\" APK_MAINTAINER=\"Diego Hernandes <iamhernandev@gmail.com>\" Change Alpine, PHP, packager and maintainer values to the ones you want. Building the sandbox. The sandbox is an special Docker image used for building the packages in an isolated manner. Build the sandbox with the following command: $ docker-compose build sandbox Building packages. To actually build the PHP packages, first we need to enter the sandbox environment: Run the sandbox with the following command: $ docker-compose run sandbox bash After entering the sandbox, you will notice two folders on /home/sandbox : /home/sandbox/php-x.x This one is the actual scripts folder, all scripts are inside. /home/sandbox/repositories This folder will contain the built packages. Enter a given package you want to build and run: Verify sources integrity: abuild checksum Actually build the package: abuild -r","title":"Build & Contribution Guide."},{"location":"building-and-or-contributing/#required-tools","text":"You must have present on the host system: docker-compose make (GNU make) Docker (latest preferable)","title":"Required Tools."},{"location":"building-and-or-contributing/#tldr","text":"You can browse Makefile scripts to have a general idea of the build process, if you don't want to read this full guide. Although is very recommended.","title":"TL;DR"},{"location":"building-and-or-contributing/#security","text":"For obvious reasons, the Alpine packaging private key, used to sign packages on this repository is a secret key known only by the maintainer. If you intend to build your packages based on this scripts, will will need to generate a new key pair and the public key from that keypair should be added to alpine. This section where the public key is added, should be replaced by your own public key path (local paths also works). # USE YOUR OWN PUBLIC KEY ON THIS STEP, OTHERWISE ALPINE WILL NOT TRUST THE PACKAGES YOU BUILT. ADD https://php.codecasts.rocks/php-alpine.rsa.pub /etc/apk/keys/php-alpine.rsa.pub Please refer to this documentation in order to generate a signing key pair: https://wiki.alpinelinux.org/wiki/Creating_an_Alpine_package#Setup_your_system_and_account","title":"Security."},{"location":"building-and-or-contributing/#env-file","text":"After generating the signing key, the next step is to configure the environment file. Copy the example env file to .env, adjusting the sensitive values. The .env should look like this: ALPINE_VERSION=3.7 PHP_VERSION=7.2 APK_PACKAGER=\"Diego Hernandes <iamhernandev@gmail.com>\" APK_MAINTAINER=\"Diego Hernandes <iamhernandev@gmail.com>\" Change Alpine, PHP, packager and maintainer values to the ones you want.","title":"Env file."},{"location":"building-and-or-contributing/#building-the-sandbox","text":"The sandbox is an special Docker image used for building the packages in an isolated manner. Build the sandbox with the following command: $ docker-compose build sandbox","title":"Building the sandbox."},{"location":"building-and-or-contributing/#building-packages","text":"To actually build the PHP packages, first we need to enter the sandbox environment: Run the sandbox with the following command: $ docker-compose run sandbox bash After entering the sandbox, you will notice two folders on /home/sandbox : /home/sandbox/php-x.x This one is the actual scripts folder, all scripts are inside. /home/sandbox/repositories This folder will contain the built packages. Enter a given package you want to build and run: Verify sources integrity: abuild checksum Actually build the package: abuild -r","title":"Building packages."}]}