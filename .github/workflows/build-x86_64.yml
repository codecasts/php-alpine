# workflow name.
name: build-x86_64

# workflow env.
env:
  DOCKER_BUILDKIT: 1
  APORTS_SCRIPTS: /home/sandbox/scripts
  APK_MAINTAINER: ${{ secrets.APK_MAINTAINER }}
  APK_PACKAGER: ${{ secrets.APK_PACKAGER }}
  BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
  BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
on:
  push:
    branches:
      - master
      - publish

jobs:
  build:
    runs-on: ubuntu-20.04

    env:
      DOCKER_PLATFORM: linux/amd64
      ALPINE_ARCH: x86_64
      ALPINE_VERSION: ${{ matrix.alpine }}
      PHP_VERSION: ${{ matrix.php }}
      ALPINE_VERSION_SLUG: v${{ matrix.alpine }}
      PHP_VERSION_SLUG: php-${{ matrix.php }}
      PA_ARCH: x86_64
      PA_BUILD_SLUG: v${{ matrix.alpine }}_php-${{ matrix.php }}_x86_64
      PA_BUILD_PATH: repo/v${{ matrix.alpine }}/php-${{ matrix.php }}/x86_64

    strategy:
      fail-fast: false
      #max-parallel: 7
      matrix:
        include:
          # alpine-v3.15-php-8.1
#          - alpine: "3.15"
#            php: "8.1"
          # alpine-v3.15-php-8.0
#          - alpine: "3.15"
#            php: "8.0"

          # alpine-v3.14-php-8.1
#          - alpine: "3.14"
#            php: "8.1"
          # alpine-v3.14-php-8.0
#          - alpine: "3.14"
#            php: "8.0"

          # alpine-v3.13-php-8.1
#          - alpine: "3.13"
#            php: "8.1"
          # alpine-v3.13-php-8.0
#          - alpine: "3.13"
#            php: "8.0"

          # alpine-v3.12-php-8.1
#          - alpine: "3.12"
#            php: "8.1"
          # alpine-v3.12-php-8.0
          - alpine: "3.12"
            php: "8.0"
#          # alpine-v3.12-php-7.4
#          - alpine: "3.12"
#            php: "7.4"
#
#          # alpine-v3.11-php-8.0
#          - alpine: "3.11"
#            php: "8.0"
#          # alpine-v3.11-php-7.4
#          - alpine: "3.11"
#            php: "7.4"
#          # alpine-v3.11-php-7.3
#          - alpine: "3.11"
#            php: "7.3"
#
#          # alpine-v3.10-php-7.4
#          - alpine: "3.10"
#            php: "7.4"
#          # alpine-v3.10-php-7.3
#          - alpine: "3.10"
#            php: "7.3"

    steps:
      # checkout repository.
      - name: git-checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      # cache packages.
      - name: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.PA_BUILD_PATH }}
          key: ${{ env.PA_BUILD_SLUG }}-${{ hashFiles('scripts/**/APKBUILD') }}
          restore-keys: |
            ${{ env.PA_BUILD_SLUG }}-${{ hashFiles('scripts/**/APKBUILD') }}
            ${{ env.PA_BUILD_SLUG }}-
            ${{ env.PA_BUILD_SLUG }}

      # debug info.
      - name: debug-info
        run: |
          echo -e "Job strategy: "
          echo -e "Alpine Linux: v${{ env.ALPINE_VERSION }}"
          echo -e "PHP Version: ${{ env.PHP_VERSION }}"

      # rsync download.
      - uses: up9cloud/action-rsync@v1.3
        name: rsync-download
        env:
          HOST: ${{ secrets.RSYNC_HOST }}
          USER: ${{ secrets.RSYNC_USER }}
          KEY: ${{ secrets.RSYNC_KEY }}
          SOURCE: ${{ secrets.RSYNC_TARGET }}/
          TARGET: ./repo/
          MODE: pull
          VERBOSE: true

      # build packages.
      - name: build
        run: |
          ls -lhart repo/
          echo "" > .env
          echo -e "${{ secrets.PHP_ALPINE_RSA }}" > .abuild/php-alpine.rsa
          echo -e "${{ secrets.PHP_ALPINE_RSA_PUB }}" > .abuild/php-alpine.rsa.pub
          docker-compose run sandbox buildrepo -a ${{ env.APORTS_SCRIPTS }} -p ${{ env.PHP_VERSION_SLUG }}

      # upload artifacts.
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PA_BUILD_SLUG }}
          path: ${{ env.PA_BUILD_PATH }}

      - name: deploy
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr
          path: repo/
          remote_path: ${{ secrets.RSYNC_TARGET }}
          remote_host: ${{ secrets.RSYNC_HOST }}
          remote_user: ${{ secrets.RSYNC_USER }}
          remote_key: ${{ secrets.RSYNC_KEY }}